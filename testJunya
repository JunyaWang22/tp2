import math
import random

# Create the HTML content as a string
# html_content = document.querySelector("#cb-body")
# html_content.innerHTML
html_content = """
<html>
<style>
#cb-body { font-size: 24px; }
#cb-body td { border: 1px solid black; }
#cb-body table {
    float: left;
    table-layout: fixed;
    border-collapse: collapse;
}
#cb-body td {
    padding: 0;
    font-family: Helvetica;
    text-align: center;
    vertical-align: center;
    border: 1px solid black;
}

#cb-body td {
    width: 100px;
    height: 100px;
    font-size: 60px;
}

#cb-body table td img {
    display: block;
    object-fit: contain;
    vertical-align: middle;
    width: 100%;
    height: 100%;
}

#cb-body { float: none; }
#cb-body table td { border: 0; padding: 1px 2px; height: auto; }
#cb-body table td img { height: auto; }
</style>
<body>
</body>
</html>
"""
deck = list(range(0,52))
CARTES = ['10C.svg', '10D.svg', '10H.svg', '10S.svg', '2C.svg', '2D.svg', '2H.svg', 
 '2S.svg', '3C.svg', '3D.svg', '3H.svg', '3S.svg', '4C.svg', '4D.svg', 
 '4H.svg', '4S.svg', '5C.svg', '5D.svg', '5H.svg', '5S.svg', '6C.svg', 
 '6D.svg', '6H.svg', '6S.svg', '7C.svg', '7D.svg', '7H.svg', '7S.svg', 
 '8C.svg', '8D.svg', '8H.svg', '8S.svg', '9C.svg', '9D.svg', '9H.svg', 
 '9S.svg', 'AC.svg', 'AD.svg', 'AH.svg', 'AS.svg', 'JC.svg', 'JD.svg', 
 'JH.svg', 'JS.svg', 'KC.svg', 'KD.svg', 'KH.svg', 'KS.svg', 'QC.svg', 
 'QD.svg', 'QH.svg', 'QS.svg']

# Function to shuffle the deck
def shuffle(deck):
    for i in range(len(deck) - 1, -1, -1):
        j = math.floor(random.random() * (i + 1))
        tmp = deck[i]
        deck[i] = deck[j]
        deck[j] = tmp
    return deck

# Function to initialize the game
def init():
    ROW = 4
    COL = 13
    c = 0
    deck = list(range(0, 52))
    cartes = shuffle(deck)
    table_content = []

    for _ in range(ROW):
        row_content = []
        for _ in range(COL):
            val = cartes[c]
            if not CARTES[val].startswith('A'):
                row_content.append('<td><img src="cards/{CARTES[val]}"></td>')
            else:
                row_content.append('<td>test</td>')
            c += 1
        table_content.append('<tr>{"".join(row_content)}</tr>')

    return '<table>{"".join(table_content)}</table>'

# Insert the generated HTML content into the specified location
start_index = html_content.find('<body>') + len('<body>')
html_content = html_content[:start_index] + init() + html_content[start_index:]

# Print the final HTML content
print(html_content)

